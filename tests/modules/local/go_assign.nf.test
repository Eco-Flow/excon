nextflow_process {

    name "Test Process GO_ASSIGN"
    script "modules/local/go_assign.nf"
    process "GO_ASSIGN"

    test("Should run without failures") {

        when {
            params {
                // define parameters here:
                clean = false
                outdir = "results"
            }
            process {
                """
                // define inputs of the process here. Example:
                input[0]=Channel.of( file("${projectDir}/data/go_assign_input/*go.txt"))
                input[1]=Channel.of( file("${projectDir}/data/go_assign_input/Orthogroups.tsv"))
                input[2]=Channel.of( file("${projectDir}/data/go_assign_input/Bombus_bifarius.prot.fa.largestIsoform.fa"))
                input[3]=Channel.of( file("${projectDir}/data/go_assign_input/*alltran_list.txt"))
                """
            }
        }

        then {
            //check if test case succeeded
            assert process.success
            //analyze trace file
            assert process.trace.tasks().size() == 1 
            with(process.out) {
              //checks one file exists in go_hash channel
              assert go_hash.size() == 1
              //checks one file exists in versions channel
              assert versions.size() == 1
              //the following does not remain the same each time, always in a differetn order
              //assert path(go_hash[0]).md5 == 'dd491d072f6bc1daeaa1f89904fb3758'
            }

            assert snapshot(
              path("${launchDir}/${params.outdir}/go/Bombus_bifarius.prot.fa.largestIsoform.fa_Sort_Result_All_Combine_GO_format"),
            ).match("go_assign") 
        }
    }
}